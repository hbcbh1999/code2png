#!/usr/bin/env node

const fs = require('fs');
const {
  basename,
  resolve,
} = require('path');
const { tmpdir } = require('os');
const minimist = require('minimist');

const capture = require('../src/capture');
const render = require('../src/render');

const argv = minimist(process.argv.slice(2));

const DEFAULT_FILENAME = 'code.png';

function code2png (code, outfile) {
  const renderFile = 'code2png.html';
  const serverDir = tmpdir();

  const content = render({
    code,
  });

  fs.writeFileSync(resolve(serverDir, renderFile), content);

  return capture({
    dir: serverDir,
    path: `/${renderFile}`,
    imageFile: resolve(process.cwd(), outfile),
  });
}


if (argv._.length === 1) {
  const codeFile = argv._[0];
  const code = fs.readFileSync(codeFile, 'utf8');
  const outfile = argv.o || `${basename(codeFile)}.png` || DEFAULT_FILENAME;
  code2png(code, outfile);
} else {
  let code = '';
  process.stdin.on('readable', () => {
    const chunk = process.stdin.read();
    if (chunk !== null) {
      code += chunk;
    }
  });

  const outfile = argv.o || DEFAULT_FILENAME;
  process.stdin.on('end', () => code2png(code, outfile));
}
